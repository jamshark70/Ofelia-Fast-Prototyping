local canvas = ofCanvas(this);
local args = canvas:getArgs();
local outlet = ofOutlet(this);
M.videoplayer = ofVideoPlayer();
local filename, start, loop = args[1], args[2], args[3];
local loaded = 0;
;
function M.new();
ofWindow.addListener("setup", this);
if args[1] == nil then print("No file loaded") else M.open(filename) end;
if args[2] == 1 then M.play() end;
if args[3] == nil then loop = 0 end end;
;
function M.free();
ofWindow.removeListener("setup", this);
M.videoplayer:close() end;
;
function M.setup() M.videoplayer:close() M.videoplayer:load(filename) end;
;
function M.open(string) ofSetDataPathRoot(ofCanvas(this, 1):getDir()) filename = string;
if ofWindow.exists then;
M.videoplayer:close();
M.videoplayer:load(filename);
if (M.videoplayer:isLoaded()) then;
print("loaded " .. filename);
M.videoplayer:update() end end;
end;
function M.update() M.videoplayer:update() end;
function M.play() M.videoplayer:play() end;
function M.stop() M.videoplayer:stop() end;
function M.pause() M.videoplayer:setPaused(true) end;
function M.speed(float) M.videoplayer:setSpeed(float) end;
function M.frame(float) M.videoplayer:setFrame(float) end;
function M.position(float) M.videoplayer:setPosition(float) end;
function M.volume(float) M.videoplayer:setVolume(float) end;
function M.loop(float) loop = float end;
function M.close() M.videoplayer:close() end;
function M.get() outlet:outletList(1, ofTable (M.videoplayer:isLoaded(), M.videoplayer:isPlaying(), ofClamp(M.videoplayer:getCurrentFrame(), 0, M.videoplayer:getTotalNumFrames()), M.videoplayer:getTotalNumFrames(), M.videoplayer:getWidth(), M.videoplayer:getHeight(), M.videoplayer:getDuration())) end;
;
function M.bang();
if loop == 0 then M.videoplayer:setLoopState(OF_LOOP_NONE) end;
if loop == 1 then M.videoplayer:setLoopState(OF_LOOP_NORMAL) end;
if loop == 2 then M.videoplayer:setLoopState(OF_LOOP_PALINDROME) end;
M.videoplayer:update();
M.videoplayer:bind();
outlet:outletBang(0);
M.videoplayer:unbind();
end;
