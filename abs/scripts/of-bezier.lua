local c = ofCanvas(this);
local args = c:getArgs();
local node$0 = ofNode();
local pt1, pt2, pt3, pt4, strokeweight, debug = ofVec3f(-100, 0, 0), ofVec3f(100, 0, 0), ofVec3f(-100, 0, 0), ofVec3f(100, 0, 0), 1;
local position, orientation, scale, lookat, drawmode = ofVec3f(), ofVec3f(), ofVec3f(1, 1, 1), ofVec3f();
;
function M.new();
if args[1] == nil then pt1.x = 0 else pt1.x = args[1] end;
if args[2] == nil then pt1.y = 0 else pt1.y = args[2] end;
if args[3] == nil then pt1.z = 0 else pt1.z = args[3] end;
if args[4] == nil then pt2.x = 0 else pt2.x = args[4] end;
if args[5] == nil then pt2.y = 0 else pt2.y = args[5] end;
if args[6] == nil then pt2.z = 0 else pt2.z = args[6] end;
if args[7] == nil then pt3.x = 0 else pt3.z = args[7] end;
if args[8] == nil then pt3.y = 0 else pt3.z = args[8] end;
if args[9] == nil then pt3.z = 0 else pt3.z = args[9] end;
if args[10] == nil then pt3.x = 0 else pt3.z = args[10] end;
if args[11] == nil then pt3.y = 0 else pt3.z = args[11] end;
if args[12] == nil then pt3.z = 0 else pt3.z = args[12] end;
if args[13] == nil then drawmode = line else drawmode = args[13] end;
if args[14] == nil then strokeweight = 1 else strokeweight = args[14] end end;
;
function M.x1(f) pt1.x = f end;
function M.y1(f) pt1.y = f end;
function M.z1(f) pt1.z = f end;
function M.x2(f) pt2.x = f end;
function M.y2(f) pt2.y = f end;
function M.z2(f) pt2.z = f end;
function M.x3(f) pt3.x = f end;
function M.y3(f) pt3.y = f end;
function M.z3(f) pt3.z = f end;
function M.x4(f) pt4.x = f end;
function M.y4(f) pt4.y = f end;
function M.z4(f) pt4.z = f end;
function M.stroke(f) strokeweight = f end;
function M.draw(s) drawmode = s end;
function M.list(l) pt1.x = l[1] pt1.y = l[2] pt1.z = l[3] pt2.x = l[4] pt2.y = l[5] pt2.z = l[6] pt3.x = l[7] pt3.y = l[8] pt3.z = l[9] pt4.x = l[10] pt4.y = l[11] pt4.z = l[12] drawmode = l[13] strokeweight = l[14] end;
function M.debug(f) debug = f end;
function M.position(l) position.x=l[1] position.y=l[2] position.z=l[3] node$0:setPosition(position:vec3()) end;
function M.orientation(l) orientation.x=l[1] orientation.y=l[2] orientation.z=l[3] node$0:setOrientation(orientation:vec3()) end;
function M.scale(l) scale.x=l[1] scale.y=l[2] scale.z=l[3] node$0:setScale(scale:vec3()) end;
function M.lookat(l) lookat.x=l[1] lookat.y=l[2] lookat.z=l[3] node$0:lookAt(lookat:vec3()) end;
;
function M.bang();
ofSetLineWidth(strokeweight);
node$0:transformGL();
if drawmode == "line" then ofNoFill() end;
if debug == 1 then node$0:draw() end;
ofDrawBezier(pt1.x, pt1.y, pt1.z, pt2.x, pt2.y, pt2.z, pt3.x, pt3.y, pt3.z, pt4.x, pt4.y, pt4.z);
node$0:restoreTransformGL();
ofFill();
return anything;
end;
